"""empty message

Revision ID: 9de06034a491
Revises: 
Create Date: 2023-03-27 16:43:25.509062

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9de06034a491'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('game')
    # op.drop_table('player')
    # op.drop_table('result')
    with op.batch_alter_table('account', schema=None) as batch_op:
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=False)
        batch_op.drop_constraint('account_email_key', type_='unique')
        batch_op.drop_constraint('account_username_key', type_='unique')
        batch_op.drop_column('last_login')
        batch_op.drop_column('created_on')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('account', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.create_unique_constraint('account_username_key', ['username'])
        batch_op.create_unique_constraint('account_email_key', ['email'])
        batch_op.alter_column('email',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)

    op.create_table('result',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('result_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('description', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='result_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('player',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('player_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('game_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['game.id'], name='player_game_id_fkey'),
    sa.ForeignKeyConstraint(['player_id'], ['account.id'], name='player_player_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='player_pkey')
    )
    op.create_table('game',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('player_one_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('player_two_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('result_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['player_one_id'], ['account.id'], name='game_player_one_id_fkey'),
    sa.ForeignKeyConstraint(['player_two_id'], ['account.id'], name='game_player_two_id_fkey'),
    sa.ForeignKeyConstraint(['result_id'], ['result.id'], name='game_result_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='game_pkey')
    )
    # ### end Alembic commands ###
